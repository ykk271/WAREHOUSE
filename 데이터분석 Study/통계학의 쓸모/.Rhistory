10 + 50
setwd('C:/Users/rladp/OneDrive/바탕 화면/통계')
getwd
getwd()
df <- read.csv('2강_분할표.csv')
df
df$vitamin <- factor(x$vitamin, 1:2, labels=c("yes", "No"))
df$vitamin <- factor(df$vitamin, 1:2, labels=c("yes", "No"))
df
df$cold <- factor(df$cold, 1:0, labels=c("yes", "No"))
df
table(x$vitamin,x$cold)
table(df$vitamin,df$cold)
setwd('C:/Users/rladp/OneDrive/바탕 화면/통계')
getwd()
.libPaths('C:/Users/rladp/OneDrive/바탕 화면/통계학의 쓸모/lib')
install.packages('packcircles')
install.packages('ggplot')
install.packages('ggplot2')
library('packcircles')
library('packcircles')
library('ggplot2')
car <- c("현대","기아","쉐보레","쌍용","르노삼성")
car <- c("현대","기아","쉐보레","쌍용","르노삼성")
N <- c(551, 388, 132, 59, 56)
df <- df.frame(car,N)
df <- data.frame(car,N)
packing <- circleProgressiveLaout(data$N, sizetype='area')
packing <- circleProgressiveLayout(data$N, sizetype='area')
packing <- circleProgressiveLayout(data$N, sizetype='area')
packing <- circleProgressiveLayout(df$N, sizetype='area')
df <- cbind(df, packing)
df
dat.gg <- circleLayoutVertices(packing, npoints = 50)
ggplot() + geon_ploygon(data = dat.gg, aex(x, y, group = id))
ggplot() + geon_ploygon(data = dat.gg, aes(x, y, group = id))
ggplot() + geom_ploygon(data = dat.gg, aes(x, y, group = id))
library('packcircles')
library('ggplot2')
car <- c("현대","기아","쉐보레","쌍용","르노삼성")
N <- c(551, 388, 132, 59, 56)
df <- data.frame(car,N)
packing <- circleProgressiveLayout(df$N, sizetype='area')
df <- cbind(df, packing)
dat.gg <- circleLayoutVertices(packing, npoints = 50)
ggplot() + geom_ploygon(data = dat.gg, aes(x, y, group = id))
ggplot() + geom_polygon(data = dat.gg, aes(x, y, group = id))
ggplot() + geom_polygon(data = dat.gg, aes(x, y, group = id, fill=as.factor(id)), colour = "black", alpha = 0.6)
packing <- circleProgressiveLayout(df$N, sizetype='area')
df <- cbind(df, packing)
dat.gg <- circleLayoutVertices(packing, npoints = 50)
ggplot() + geom_polygon(data = dat.gg, aes(x, y, group = id, fill=as.factor(id)), colour = "black", alpha = 0.6) + geom(data = df.aex(x, y, size=N, label=car)) + scale_size_continuous(range = c(6, 18))
ggplot() + geom_polygon(data = dat.gg, aes(x, y, group = id, fill=as.factor(id)), colour = "black", alpha = 0.6) + geom_text(data = df.aex(x, y, size=N, label=car)) + scale_size_continuous(range = c(6, 18))
ggplot() + geom_polygon(data = dat.gg, aes(x, y, group = id, fill=as.factor(id)), colour = "black", alpha = 0.6) + geom_text(data = df.aes(x, y, size=N, label=car)) + scale_size_continuous(range = c(6, 18))
ggplot() + geom_polygon(data = dat.gg, aes(x, y, group = id, fill=as.factor(id)), colour = "black", alpha = 0.6) + geom_text(data = data.aes(x, y, size=N, label=car)) + scale_size_continuous(range = c(6, 18))
ggplot() + geom_polygon(data = dat.gg, aes(x, y, group = id, fill=as.factor(id)), colour = "black", alpha = 0.6) + geom_text(data = aes(x, y, size=N, label=car)) + scale_size_continuous(range = c(6, 18))
ggplot() + geom_polygon(data = dat.gg, aes(x, y, group = id, fill=as.factor(id)), colour = "black", alpha = 0.6) + geom_text(data = data.aes,x, y, size=N, label=car)) + scale_size_continuous(range = c(6, 18))
ggplot() + geom_polygon(data = dat.gg, aes(x, y, group = id, fill=as.factor(id)), colour = "black", alpha = 0.6) + geom_text(data = df.aes(x, y, size=N, label=car)) + scale_size_continuous(range = c(6, 18))
df <- data.frame(car,N)
packing <- circleProgressiveLayout(df$N, sizetype='area')
df <- cbind(df, packing)
dat.gg <- circleLayoutVertices(packing, npoints = 50)
ggplot() + geom_polygon(data = dat.gg, aes(x, y, group = id, fill=as.factor(id)), colour = "black", alpha = 0.6)
library('packcircles')
library('ggplot2')
car <- c("현대","기아","쉐보레","쌍용","르노삼성")
N <- c(551, 388, 132, 59, 56)
df <- data.frame(car,N)
packing <- circleProgressiveLayout(df$N, sizetype='area')
df <- cbind(df, packing)
dat.gg <- circleLayoutVertices(packing, npoints = 50)
ggplot() + geom_polygon(data = dat.gg, aes(x, y, group = id, fill=as.factor(id)), colour = "black", alpha = 0.6)
library('packcircles')
library('ggplot2')
car <- c("현대","기아","쉐보레","쌍용","르노삼성")
N <- c(551, 388, 132, 59, 56)
df <- data.frame(car,N)
packing <- circleProgressiveLayout(df$N, sizetype='area')
library('packcircles')
library('packcircles')
setwd('C:/Users/rladp/OneDrive/바탕 화면/통계')
getwd()
.libPaths('C:/Users/rladp/OneDrive/바탕 화면/통계학의 쓸모/lib')
install.packages('packcircles')
install.packages('ggplot2')
library('packcircles')
library('ggplot2')
car <- c("현대","기아","쉐보레","쌍용","르노삼성")
N <- c(551, 388, 132, 59, 56)
df <- data.frame(car,N)
packing <- circleProgressiveLayout(df$N, sizetype='area')
data <- cbind(data, packing)
data <- cbind(df, packing)
dat.gg <- circleLayoutVertices(packing, npoints=50)
ggplot() + geom_polygon(data = dat.gg, aes(x, y, group = id, fill=as.factor(id)), colour = "black", alpha = 0.6) + geom_text(data = data, aes(x, y, size=N, label = car)) + scale_size_continuous(range = c(6,18)) + theme_void() + theme(legend.position="none") + coord_equal()
age<-c(2,4,5,5,6,6,6,10,15,15,16,16,17,18,19,19,23,25,28,31,32,32,32,33,35,37,44,45,46,46,54,55,55,65,66)
install.packages("aplpack")
library(aplpack)
library('aplpack')
.libPaths('C:/Users/rladp/OneDrive/바탕 화면/통계학의 쓸모/lib')
install.packages("aplpack")
library('aplpack')
age<-c(2,4,5,5,6,6,6,10,15,15,16,16,17,18,19,19,23,25,28,31,32,32,32,33,35,37,44,45,46,46,54,55,55,65,66)
stem(age)
#성별을 나타내는 변수 추가
male <-c(5,6,15,15,16,17,23,25,32,37,44,45,46,46,54,55,55,65,66)
female <- c(2,4,5,6,6,10,16,18,19,19,28,31,32,32,33,35)
stem.leaf.backback(female, male, m=1, Max=60)
library(ggplot2)
.libPaths('C:/Users/rladp/OneDrive/바탕 화면/통계학의 쓸모/lib')
library(ggplot2)
age<-c(2,4,5,5,6,6,6,10,15,15,16,16,17,18,19,19,23,25,28,31,32,32,32,33,35,37,44,45,46,46,54,55,55,65,66)
sex <-c(2,2,1,2,1,2,2,2,1,1,1,2,1,2,2,2,1,1,2,2,1,2,2,2,2,1,1,1,1,1,1,1,1,1,1)
data <- data.frame(age, sex)
G<-ggplot(data, aes(x=age)) + geom_dotplot() + theme_classic() +scale_x_continuous(breaks=seq(0, 70, 10))
G+theme(axis.text=element_text(size=20,face="bold"), axis.title=element_text(size=20,face="bold"))
G<-ggplot(data, aes(x=age)) + geom_dotplot() + theme_classic() +scale_x_continuous(breaks=seq(0, 70, 10))
G+theme(axis.text=element_text(size=20,face="bold"), axis.title=element_text(size=20,face="bold"))
#성별 변수를 factor(범주형) 변수로 변환
data$sex <- factor(data$sex, levels=c("1","2"), labels=c("male","female"))
#성별에 따른 점도표 작성
GR <- ggplot(data, aes(x=age, fill = factor(sex))) + geom_dotplot(stackgroups = TRUE,binpositions = "all") + theme_classic() +scale_x_continuous(breaks=seq(0, 70, 10))
GR+theme(axis.text=element_text(size=20,face="bold"), axis.title=element_text(size=20,face="bold")) + scale_fill_manual(values = c("#3399FF", "#66CC33"))+ theme(legend.title =element_blank ()) + theme(legend.text = element_text(size = 16))
.libPaths('C:/Users/rladp/OneDrive/바탕 화면/통계학의 쓸모/lib')
x <- c(1,2,3,4,5)
x
qantile(x,0.25)
quantile(x,0.25)
quantile(x,0.75)
y <- c(x, 2000)
quantile(y,0.25)
quantile(y,0.75)
boxplot(y)
y <- c(x, 20)
quantile(y,0.25)
quantile(y,0.75)
boxplot(y)
Time<-c(4,7,5,8,6,4,2,9)
Score<-c(55,85,63,92,73,58,43,87)
data<-cbind(Time, Score)
#산점도 작성
plot(Time, Score)
#상관게수 산출
cor.test(Time, Score)
x <- c(4.5,3.1,2.5,4.7,4.9,2.9,4.3,3.3,3.1)
x <- c(4.5,3.1,2.5,4.7,4.9,2.9,4.3,3.3,3.1)
t.test(x)
mean(x)
prop.test(424, 1000, crrect = F)
prop.test(424, 1000, correct = F)
setwd('C:/Users/rladp/OneDrive/바탕 화면/통계')
getwd()
.libPaths('C:/Users/rladp/OneDrive/바탕 화면/통계학의 쓸모/lib')
# 5강
install.packages("TeachingDemos")
setwd('C:/Users/rladp/OneDrive/바탕 화면/통계')
library(TeachingDemos)
getwd()
setwd('C:/Users/rladp/OneDrive/바탕 화면/통계')
# 6강
install.packages("TeachingDemos")
setwd('C:/Users/rladp\OneDrive/바탕 화면/데이터 분석/Data_Analytics_Study/통계학의 쓸모')
getwd()
.libPaths('C:/Users/rladp\OneDrive/바탕 화면/데이터 분석/Data_Analytics_Study/통계학의 쓸모/lib')
getwd()
.libPaths('C:/Users/rladp\OneDrive/바탕 화면/데이터 분석/Data_Analytics_Study/통계학의 쓸모/lib')
setwd('C:/Users/rladp/OneDrive/바탕 화면/데이터 분석/Data_Analytics_Study/통계학의 쓸모')
getwd()
.libPaths('C:/Users/rladp/OneDrive/바탕 화면/데이터 분석/Data_Analytics_Study/통계학의 쓸모/lib')
# 6강
install.packages("TeachingDemos")
library(TeachingDemos)
#데이터 입력
x <- c(11.87, 10.38, 11.55, 7.88, 9.35, 9.64, 9.64, 10.67, 9.85, 11.80, 9.85, 10.29, 12.11, 10.98, 8.74, 11.06, 9.75, 11.35, 10.01, 9.92)
#모분산 구간추정
sigma.test(x)
id = c(1:1:14)
id
drug = ones(7)
drug = c(1,1,1,1,1,1,1,2,2,2,2,2,2,2)
drug
setwd('C:/Users/rladp/OneDrive/바탕 화면/데이터 분석/Data_Analytics_Study/통계학의 쓸모')
getwd()
data <- read.csv("8. 대응t검정.csv")
data
data$delta <- data$post-data$pre
data
t.test(data$post, data$pre, paired=T)
t.test(data$post, data$pre, paired=T)
t.test(data$delta, mu=0)
data <- read.csv("8. 대응t검정.csv")
data
data <- read.csv("8. 대응t검정.csv")
data
# 변화량
data$delta <- data$post-data$pre
data
t.test(delta~drug, data=data, var.equal=T)
setwd('C:/Users/rladp/OneDrive/바탕 화면/데이터 분석/Data_Analytics_Study/통계학의 쓸모')
getwd()
.libPaths('C:/Users/rladp/OneDrive/바탕 화면/데이터 분석/Data_Analytics_Study/통계학의 쓸모/lib')
data <- read.csv("9. 일원배치 분산분석.csv")
data
data1 <- read.csv("9. 일원배치 분산분석.csv")
data1
data$delta <- data1$pre - data1$post
data1
data1$delta <- data1$pre - data1$post
data1
rm()
rm(list=ls())
rm(list=ls())
setwd('C:/Users/rladp/OneDrive/바탕 화면/데이터 분석/Data_Analytics_Study/통계학의 쓸모')
getwd()
.libPaths('C:/Users/rladp/OneDrive/바탕 화면/데이터 분석/Data_Analytics_Study/통계학의 쓸모/lib')
data1 <- read.csv("9. 일원배치 분산분석.csv")
data1
data1$delta <- data1$pre - data1$post
data1
analysis <- aov(data1$delta~data1$drug, data=data1)
summary(analysis)
aggregate(data1$delta~data1$drug, data=data1, mean)
boxplot(data1$delta ~ data1$drug)
# 평균값 계산
aggregate(data1$delta~data1$drug, data=data1, mean)
boxplot(data1$delta ~ data1$drug,
main = "상자그림",
xlab = "약제의 종류",
ylab = "통증개선정도")
# 8강
install.package("agricolae")
# 9강
install.packages("agricolae")
library("agricolae")
library("agricolae")
scheffe.test(analysis,
"data1$drug", # 군(범주형 자료)
alpha = 0.05, # 유의수준
group = TRUE,
console = TRUE,) # 프린트 아웃
library("agricolae")
scheffe.test(analysis,
"data1$drug", # 군(범주형 자료)
alpha = 0.05, # 유의수준
group = TRUE,
console = TRUE,) # 프린트 아웃
x <- read.csv("2장_분할표.csv")
x
table(x$vitamin,x$cold)
x$Vitamin<-factor(x$vitamin, 1:2, labels=c("Yes","No"))
x$Cold<-factor(x$cold, 0:1, labels=c("No","Yes"))
table(x$vitamin,x$cold)
a <- table(x$vitamin, x$cold)
a
table(x$vitamin,x$cold)
x$Vitamin<-factor(x$vitamin, 1:2, labels=c("Yes","No"))
x$Cold<-factor(x$cold, 0:1, labels=c("No","Yes"))
a <- table(x$vitamin, x$cold)
a
x <- read.csv("2장_분할표.csv")
x
table(x$vitamin,x$cold)
x$Vitamin<-factor(x$vitamin, 1:2, labels=c("Yes","No"))
x$Cold<-factor(x$cold, 0:1, labels=c("No","Yes"))
a <- table(x$vitamin, x$cold)
a
x
df <- read.csv('2강_분할표.csv')
df
# label 달기
df$vitamin <- factor(df$vitamin, 1:2, labels=c("yes", "No"))
df$cold <- factor(df$cold, 1:0, labels=c("yes", "No"))
df
table(df$vitamin,df$cold)
df <- read.csv('2강_분할표.csv')
x <- read.csv("2장_분할표.csv")
x
df <- read.csv("2장_분할표.csv")
df
df$vitamin <- factor(df$vitamin, 1:2, labels=c("yes", "No"))
df$cold <- factor(df$cold, 1:0, labels=c("yes", "No"))
df
table(df$vitamin,df$cold)
df <- read.csv("2장_분할표.csv")
df
df$vitamin <- factor(df$vitamin, 1:2, labels=c("yes", "No"))
df$cold <- factor(df$cold, 1:0, labels=c("yes", "No"))
table(df$vitamin,df$cold)
table(df$vitamin,df$cold)
a <- table(df$vitamin,df$cold)
a
chisq.test(a, correct=F)
Time<-c(4,7,5,8,6,4,2,9)
Score<-c(55,85,63,92,73,58,43,87)
data<-cbind(Time, Score)
#단순선형회귀분석 실행 및 결과확인
fit<-lm(Score~Time)
summary(fit)
#산점도 작성 후 회귀선 나타내기
plot(Time, Score)
abline(fit)
